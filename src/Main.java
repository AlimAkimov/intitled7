public class Main {

    public static void main(String[] args) {
//        taks1();
//        task2();
//        task3();
//        task4();
//        task5();
//        task6();
//        task7();
        task8();
    }

    public static void taks1() {
//        Продолжите работать с кодом, который вы написали в предыдущем уроке — в задачах с накоплениями.
//        С помощью цикла while посчитайте, сколько месяцев потребуется, чтобы накопить 2 459 000 рублей
//        при условии, что первоначально мы имеем 0 рублей и готовы откладывать по 15 тысяч рублей.
//        Результат программы должен быть выведен в консоль с тем количеством месяцев, которое необходимо
//        для накопления данной суммы. Формат сообщения: «Месяц …, сумма накоплений равна … рублей» .

        int saveMoney = 15000;
        int total = 0;
        int month = 0;
        while (total < 2_459_000) {
            total = total + saveMoney;
            month = month + 1;
            System.out.println("Месяц " + month + ", сумма накоплений равна " + total + " рублей.");
        }
    }

    public static void task2() {
//        Выведите в одну строку через пробел числа от 1 до 10 с помощью цикла while.
//        На следующей строке выведите числа в обратном порядке от 10 до 1 с помощью цикла for.
//        Для обоих циклов можно использовать как одну общую переменную, так и в каждом цикле свою.
//        Не забудьте выполнить переход на новую строку между двумя циклами.
//        В результате программы вывод должен получиться следующий:
//        1 2 3 4 5 6 7 8 9 10
//        10 9 8 7 6 5 4 3 2 1

        int oneToTen = 1;
        while (oneToTen <= 10) {
            System.out.print(oneToTen + " ");
            oneToTen = oneToTen + 1;
        }
        System.out.println();

        for (int tenToOne = 10; tenToOne >= 1; tenToOne--) {
            System.out.print(tenToOne + " ");
        }
    }

    public static void task3() {
//        В стране Y население равно 12 миллионов человек.
//        Рождаемость составляет 17 человек на 1000, смертность — 8 человек.
//        Рассчитайте, какая численность населения будет через 10 лет, если показатели рождаемости и смертности постоянны.
//        В консоль выведите результат операции на каждый год в формате: «Год …, численность населения составляет …».
        int population = 12_000_000;
        double bornPerThousand = 17;
        double deathPerThousand = 8;
        for (int i = 1; i <= 10; i++) {
            int birth = (int) ((bornPerThousand / 1000) * population);
            int death = (int) ((deathPerThousand / 1000) * population);
            population = population + (birth - death);
            System.out.println("Год " + i + " , численность населения составляет " + population);

        }

    }

    public static void task4() {
//        Василий решил положить деньги на накопительный счет, где каждый месяц к сумме его вклада добавляется еще 7%.
//        Первоначальная сумма вклада — 15 тысяч рублей.
//        Вычислите и выведите в консоль, сколько месяцев Василию нужно будет копить, чтобы собрать сумму в 12 миллионов рублей
//        при условии, что процент банка от накоплений не меняется, а всегда равен 7%.
//        Выведите в консоль результат программы с указанием суммы накоплений по каждому месяцу.
        int money = 15000;
        int percentOnDeposit = 7;
        for (int i = 1; money <= 12_000_000; i++) {
            money = money + (money / 100 * 7);
            System.out.println("Месяц " + i + ". Cумма на депозите " + money);
        }
    }

    public static void task5() {
//        Видоизмените программу таким образом, чтобы в консоль выводились не все месяцы подряд, а только каждый шестой.
//                Должны быть видны накопления за 6, 12, 18, 24-й и следующие месяцы.
        int money = 15000;
        int percentOnDeposit = 7;
        for (int month = 1; money <= 12_000_000; month++) {
            money = money + (money / 100 * 7);
            if (month % 6 == 0) {
            System.out.println("Месяц " + month + ". Cумма на депозите " + money);
            }
        }
    }

    public static void task6() {
//        Василий решил, что будет копить деньги ближайшие 9 лет. Он хочет знать, какой будет сумма его накоплений каждые
//        полгода на протяжении этих 9 лет.
//        Исходная сумма всё та же — 15 тысяч рублей, проценты банка – 7% ежемесячно.
//        Напишите программу, которая будет выводить сумму накоплений за каждые полгода в течение 9 лет.

        int money = 15000;
        int percentOnDeposit = 7;
        for (int month = 1; month <= 108; month++) {
            money = money + (money / 100 * 7);
            if (month % 6 == 0) {
                System.out.println("Месяц " + month + ". Cумма на депозите " + money);
            }
        }

    }

    public static void task7() {
//        В компании пятница — отчетный день.
//        Нужно написать программу, которая считает дни месяца по датам, определяет, какой день пятница, и выводит сообщение
//        с напоминанием, что нужно подготовить еженедельный отчет.
//        Создайте переменную типа int, которая хранит в себе номер первой пятницы месяца (число от 1 до 7).
//        Выведите на каждую пятницу месяца (включая полученную) сообщение следующего
//        вида: «Сегодня пятница, ...-е число. Необходимо подготовить отчет».
//        В нашем месяце 31 день. В результате у вас должно получиться от 4 до 5 сообщений с напоминаниями по разным датам.
        int friday = 5;
        for (int day = friday; day <= 31; day += 7) {
            System.out.println("Cегодня пятница, " + day + "-е число. Необходимо подготовить отчёт.");
        }
    }

    public static void task8() {
//        Нам нужно написать астрономическое приложение, которое считает, когда над Землей пролетает комета.
//        Известно, что комета пролетает каждый 79-й год, начиная с нулевого.
//        В консоль нужно вывести все годы за последние 200 лет, когда появлялась комета, а также следующий год ее
//        появления (ближайшие 100 лет).
//        Для вычисления периода можно создать две дополнительные переменные, которые содержат год за 200 лет
//        до текущего (из созданной ранее переменной) в качестве старта и 100 лет после в качестве завершения периода расчета.
//        В результате решения задачи в консоли должен получиться следующий результат:
//        1896
//
//        1975
//
//        2054

        int twoHundredYearsBefore = 1825;
        int oneHundredYearsAfter = 2125;
        for (int i = 0; i <= oneHundredYearsAfter; i = i + 79) {
            if (i >= twoHundredYearsBefore) {
                System.out.println(i);
            }

        }

    }



}


